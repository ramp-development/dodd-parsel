{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/compare/routeConfigs.ts", "../src/compare/class.ts", "../src/compare/index.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "declare global {\n  interface Window {\n    routeConfigs: CompareRoute[];\n  }\n}\n\n// Now you can use window.routeConfigs\nconsole.log(window.routeConfigs);\n\nexport interface CompareRouteGroup {\n  cost: number;\n  costTag?: string;\n  costTagVisibility?: boolean;\n  speedValue: number;\n  speedTag?: string;\n  speedTagVisibility?: boolean;\n  speedLabel?: string;\n  pickup: boolean;\n  pickupTag?: string;\n}\n\nexport interface CompareRouteGroups {\n  parsel: CompareRouteGroup;\n  other: CompareRouteGroup;\n  retail: CompareRouteGroup;\n}\n\nexport interface CompareRoute {\n  name: string;\n  outputs: CompareRouteGroups;\n}\n\nexport const routeConfigs: CompareRoute[] = [\n  {\n    name: 'Boston-NewYork',\n    outputs: {\n      parsel: {\n        cost: 6.07,\n        speedValue: 2,\n        pickup: true,\n        pickupTag: 'Up to 5 free pickups',\n      },\n      other: {\n        cost: 8.12,\n        speedValue: 3,\n        pickup: false,\n      },\n      retail: {\n        cost: 12.45,\n        speedValue: 3,\n        pickup: false,\n      },\n    },\n  },\n  {\n    name: 'Boston-Dallas',\n    outputs: {\n      parsel: {\n        cost: 4.07,\n        speedValue: 1,\n        pickup: true,\n        pickupTag: 'Up to 4 free pickups',\n      },\n      other: {\n        cost: 6.12,\n        speedValue: 2,\n        pickup: false,\n      },\n      retail: {\n        cost: 10.45,\n        speedValue: 2,\n        pickup: false,\n      },\n    },\n  },\n  {\n    name: 'Denver-NewYork',\n    outputs: {\n      parsel: {\n        cost: 7.07,\n        speedValue: 1,\n        pickup: true,\n        pickupTag: 'Up to 6 free pickups',\n      },\n      other: {\n        cost: 9.12,\n        speedValue: 2,\n        pickup: false,\n      },\n      retail: {\n        cost: 13.45,\n        speedValue: 2,\n        pickup: false,\n      },\n    },\n  },\n];\n", "import { type CompareRoute, type CompareRouteGroup, type CompareRouteGroups } from './routeConfigs';\n\ntype GroupName = 'parsel' | 'other' | 'retail';\ntype Input = HTMLSelectElement;\ntype Output = HTMLElement;\n\nexport class CompareTable {\n  private component: HTMLElement;\n  private origin: HTMLSelectElement;\n  private destination: HTMLSelectElement;\n  private inputs: Input[];\n  private outputs: Output[];\n  private routeName: string;\n  private routeConfig: CompareRouteGroups;\n\n  constructor(component: HTMLElement) {\n    this.component = component;\n    this.origin = component.querySelector('select[name=\"origin\"]') as HTMLSelectElement;\n    this.destination = component.querySelector('select[name=\"destination\"]') as HTMLSelectElement;\n    this.inputs = [this.origin, this.destination];\n    this.outputs = [...component.querySelectorAll<HTMLElement>('[data-compare-output]')];\n    this.routeName = this.getRouteName();\n    this.routeConfig = this.getRouteConfig();\n    this.update = this.update.bind(this);\n  }\n\n  public init(): void {\n    this.render();\n    this.bindEvents();\n  }\n\n  private bindEvents(): void {\n    this.inputs.forEach((input) => {\n      input.addEventListener('change', () => {\n        this.update();\n      });\n    });\n  }\n\n  private update(): void {\n    this.routeName = this.getRouteName();\n    this.routeConfig = this.getRouteConfig();\n    this.render();\n  }\n\n  private render(): void {\n    this.outputs.forEach((output) => {\n      const { compareGroup, compareOutput } = output.dataset;\n      if (!compareGroup || !compareOutput) return;\n\n      const groupConfig = this.getGroupConfig(compareGroup as GroupName);\n      const value = groupConfig[compareOutput];\n\n      switch (compareOutput) {\n        case 'costTag':\n          const { costTagVisibility } = groupConfig;\n          if (costTagVisibility) {\n            output.style.removeProperty('display');\n          } else {\n            output.style.display = 'none';\n          }\n          this.setText(output, value);\n          break;\n        case 'speedTagVisibility':\n          const { speedTagVisibility } = groupConfig;\n          if (speedTagVisibility) {\n            output.style.removeProperty('display');\n          } else {\n            output.style.display = 'none';\n          }\n          this.setText(output, value);\n          break;\n        case 'pickup':\n          output.dataset.comparePickup = value;\n          break;\n        default:\n          this.setText(output, value);\n          break;\n      }\n    });\n  }\n\n  private setText(output: Output, text: string) {\n    output.textContent = text;\n  }\n\n  private getRouteName(): string {\n    return `${this.origin.value}-${this.destination.value}`;\n  }\n\n  private getRouteConfig(): CompareRouteGroups {\n    const { routeConfigs } = window;\n    const routeConfig = routeConfigs.find((item) => item.name === this.routeName);\n    if (!routeConfig) throw new Error(`No route configuration found for ${this.routeName}`);\n\n    this.routeConfig = routeConfig.outputs;\n    this.updateRouteConfig();\n    return routeConfig.outputs;\n  }\n\n  private updateRouteConfig(): void {\n    // parsel cost tag\n    const costSavings = this.routeConfig.parsel.cost / this.routeConfig.retail.cost;\n    const roundedSavings = Math.round(costSavings * 100);\n    const costTag = `${roundedSavings}% savings`;\n    const costTagVisibility = roundedSavings < 1 ? false : true;\n\n    // parsel speed tag\n    const difference = this.routeConfig.retail.speedValue - this.routeConfig.parsel.speedValue;\n    const plural = difference > 1 ? 'days' : 'day';\n    const speedTag = `${difference} ${plural} faster`;\n    const speedTagVisibility = difference < 1 ? false : true;\n\n    // apply\n    this.routeConfig.parsel.costTag = costTag;\n    this.routeConfig.parsel.costTagVisibility = costTagVisibility;\n    this.routeConfig.parsel.speedTag = speedTag;\n    this.routeConfig.parsel.speedTagVisibility = speedTagVisibility;\n\n    // speed labels\n    this.routeConfig.parsel.speedLabel = this.routeConfig.parsel.speedValue > 1 ? 'days' : 'day';\n    this.routeConfig.other.speedLabel = this.routeConfig.other.speedValue > 1 ? 'days' : 'day';\n    this.routeConfig.retail.speedLabel = this.routeConfig.retail.speedValue > 1 ? 'days' : 'day';\n  }\n\n  private getGroupConfig(groupName: GroupName): CompareRouteGroup {\n    const routeGroupConfig = this.routeConfig[groupName];\n    return routeGroupConfig;\n  }\n}\n", "import { CompareTable } from './class';\n\nexport const compare = () => {\n  // eslint-disable-next-line no-console\n  console.log('compare');\n\n  const attr = 'data-compare';\n  const components = [...document.querySelectorAll<HTMLDivElement>(`[${attr}=\"component\"]`)];\n  if (components.length === 0) return;\n\n  components.forEach((component) => {\n    const compareTable = new CompareTable(component);\n    compareTable.init();\n  });\n};\n", "import { compare } from './compare';\n\nwindow.Webflow ||= [];\nwindow.Webflow.push(() => {\n  compare();\n});\n"],
  "mappings": "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",
  "names": []
}
